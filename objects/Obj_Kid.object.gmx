<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>Spr_Kid_Stand_R</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>Obj_Player</parentName>
  <maskName>Mask_Player</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.SaveLoad = 0
//Get Name
SelfName = object_get_name(object_index)
Life = 3
MercyFrames = 0

// IntPosVar
PosX = x
PosY = y
Box = 0
//PosX = x
//PosY = y
/*
//Int Physics Vars
Acelerarion = 0.5
WalkSpeed = 1.5
JumpSpeed = 4.275
DJumpSpeed = 3.625
Gravity = 0.25
//gravity = 0.25
//gravity_direction = 270
MinFallSpeed = 1
MaxFallSpeed = 12
*/

Killed = 0
Acelerarion = 0.375//1.25
Decelerarion = 0.25//0.25
WalkSpeed = 2.75
JumpSpeed = 8.55
DJumpSpeed = 7.25
Gravity = 0.4
MinFallSpeed = 1
MaxFallSpeed = 12
//125
HSpeed = 0
VSpeed = 0
DJump = 1
image_speed = Frame_Speed(10)

//Int Controls Vars
if SelfName = "Obj_Kid" {
  Key_Left = vk_left
  Key_Right = vk_right
  Key_Jump = ord('Z')
  Key_Shoot = ord('X')
  Key_Up = vk_up
  Key_Down = vk_down
  Key_Change = ord('S')
  Key_Trans = ord('A')}

if SelfName = "Obj_Kid_P2" {
  Key_Left = ord('J')
  Key_Right = ord('L')
  Key_Jump = ord('Z')
  Key_Shoot = ord('X')
  Key_Up = ord('I')
  Key_Down = ord('K')
  Key_Change = ord('S')
  Key_Trans = ord('A')
}

Hold_Left = 0
Hold_Right = 0
Press_Jump = 0
Hold_Jump = 0
Hold_Shoot = 0
Press_Shoot = 0
Press_Up = 0
Press_Down = 0
Press_Change = 0
Press_Trans = 0

//Int Other Vars
MoveDirection = 0
Facing = 1
Gun = global.SGun
OnFloor = 0
OnSolid = 0
EXT_PosY = 0

if SelfName = "Obj_Kid" {
  if !instance_exists(Obj_Gun)
    {instance_create(x,y,Obj_Gun)
   }
  }

if SelfName = "Obj_Kid_P2"
{if !instance_exists(Obj_Gun_P2)
{instance_create(x,y,Obj_Gun_P2)}}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//instance_create(x,y,Obj_Player_Dead)
if global.SaveLoad = 0
{effect_create_above(ef_firework,round(PosX+HSpeed),round(PosY+VSpeed)-5,1,c_red)
audio_play_sound_on(global.SFX,Snd_Death,false,1)}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if global.Direction = "Left"
{PosX = room_width}
if global.Direction = "Right"
{PosX = 0}
if global.Direction = "Up"
{PosY = room_height}
if global.Direction = "Down"
{PosY = 0}
global.Light = 1
global.Direction = "None"
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>x = round(PosX)

if !place_meeting(PosX,PosY+EXT_PosY,Obj_Block_Parent) 
&amp;&amp; !place_meeting(PosX,PosY+EXT_PosY,Obj_Platform)
&amp;&amp; EXT_PosY &gt; 0
{PosY += EXT_PosY}

if EXT_PosY &lt; 0
{PosY += EXT_PosY}

y = round(PosY)
EXT_PosY  = 0

if global.Light = 1
{ls_light_set_pos(Light,x,y)}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>x = round(PosX)
y = round(PosY)
CLeft=bbox_left-x
CRight=bbox_right-x
CTop=bbox_top-y
CBottom=bbox_bottom-y
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Imput Vars
if global.Warp = 1
{image_speed = 0
Press_Jump = 0
Press_Shoot = 0
Press_Up = 0
Press_Change = 0
Press_Trans = 0
}
else
{
Hold_Left = keyboard_check(Key_Left)
Hold_Right = keyboard_check(Key_Right)
Hold_Jump = keyboard_check(Key_Jump)
Hold_Shoot = keyboard_check(Key_Shoot)

Press_Jump = keyboard_check_pressed(Key_Jump)
Press_Shoot = keyboard_check_pressed(Key_Shoot)
Press_Up = keyboard_check_pressed(Key_Up)
Press_Change = keyboard_check_pressed(Key_Change)
Press_Trans = keyboard_check_pressed(Key_Trans)

//Walk
MoveDirection = -Hold_Left + Hold_Right
if MoveDirection = -1
{if HSpeed &gt; -WalkSpeed
 {if HSpeed-Acelerarion &gt; -WalkSpeed
  {HSpeed -= Acelerarion}
 else
  {HSpeed = -WalkSpeed}}
}

if MoveDirection = 1
{if HSpeed &lt; WalkSpeed
 {if HSpeed+Acelerarion &lt; WalkSpeed
  {HSpeed += Acelerarion}
 else
  {HSpeed = WalkSpeed}}
}


if MoveDirection = 0
{if HSpeed &lt; 0
  {if HSpeed &lt; -Decelerarion
   {HSpeed += Decelerarion}
  else
   {HSpeed = 0}}
 if HSpeed &gt; 0
  {if HSpeed &gt; Decelerarion
   {HSpeed -= Decelerarion}
  else
   {HSpeed = 0}}
}

//Gravity = 0.25
//Jump
if (place_meeting(PosX,PosY+1,Obj_Sub_Block)) 
|| (collision_rectangle(PosX-5,PosY+8,PosX+5,PosY+8,Obj_Platform,true,false) &amp;&amp; VSpeed &gt;= 0)
{OnFloor = 1
if DJump &lt; 1
{DJump = 1}}
else
{OnFloor = 0}

if (place_meeting(PosX,PosY+VSpeed+1,Obj_Block_Parent))
|| (collision_rectangle(PosX-4,PosY+8,PosX+4,PosY+8,Obj_Platform,true,false) &amp;&amp; VSpeed &gt;= 0)
{OnSolid = 1}
else
{OnSolid = 0}

if (place_meeting(PosX,PosY+VSpeed+1,Obj_Block_Parent))
{OnBlock = 1}
else
{OnBlock = 0}

if Press_Jump &amp;&amp; DJump &gt;= 1 &amp;&amp; !OnFloor
{DJump -= 1
VSpeed = -DJumpSpeed
audio_play_sound_on(global.SFX,Snd_DJump,false,1)}

if Press_Jump &amp;&amp; OnFloor
{VSpeed = -JumpSpeed
audio_play_sound_on(global.SFX,Snd_Jump,false,1)}

if VSpeed &lt; -MinFallSpeed &amp;&amp; !Hold_Jump
{VSpeed = -MinFallSpeed}

if VSpeed &gt; MaxFallSpeed
{VSpeed = MaxFallSpeed}

VSpeed += Gravity

//Shoot
if MoveDirection != 0
{Facing = MoveDirection}

/// Kill Code
if (place_meeting(PosX,PosY,Obj_Solid))
{instance_destroy()
Killed = 1}

if (place_meeting(PosX+HSpeed,PosY,Obj_Spike_Up_Parent))
|| (place_meeting(PosX,PosY+VSpeed,Obj_Spike_Up_Parent) &amp;&amp; VSpeed &gt; 0 &amp;&amp; !place_meeting(PosX,PosY+VSpeed,Obj_Sub_Block))
{instance_destroy()
Killed = 1}

if (place_meeting(PosX+HSpeed,PosY,Obj_Spike_Down_Parent)) ||
(place_meeting(PosX,PosY+VSpeed,Obj_Spike_Down_Parent) &amp;&amp; VSpeed &lt; 0 &amp;&amp; !place_meeting(PosX,PosY+VSpeed,Obj_Block_Parent))
{instance_destroy()
Killed = 1}

if (place_meeting(PosX+HSpeed,PosY,Obj_Spike_Left_Parent) &amp;&amp; HSpeed &gt; 0 &amp;&amp; !place_meeting(PosX+HSpeed,PosY,Obj_Sub_Block)) ||
(place_meeting(PosX,PosY+VSpeed,Obj_Spike_Left_Parent))
{instance_destroy()
Killed = 1}

if (place_meeting(PosX+HSpeed,PosY,Obj_Spike_Right_Parent) &amp;&amp; HSpeed &lt; 0 &amp;&amp; !place_meeting(PosX+HSpeed,PosY,Obj_Sub_Block)) ||
(place_meeting(PosX,PosY+VSpeed,Obj_Spike_Right_Parent))
{instance_destroy()
Killed = 1}

/// Collision Code
if Killed = 0{
//Horizontal Collision
if (place_meeting(PosX+HSpeed,PosY,Obj_Solid))
{
    if HSpeed != 0
    {if HSpeed &gt; 0
     {PosX = floor(PosX)}
    else
     {PosX = ceil(PosX)}
    }
    
    while(!place_meeting(PosX+sign(HSpeed),PosY,Obj_Solid))
    {
        PosX += sign(HSpeed)
    }
    HSpeed = 0;
}

PosX += HSpeed
x = round(PosX)

//Vertical Collision
if (place_meeting(PosX,PosY+VSpeed,Obj_Solid))
{

    if VSpeed != 0
    {if VSpeed &gt; 0
     {PosY = floor(PosY)}
    else
     {PosY = ceil(PosY)}
    }

    while(!place_meeting(PosX,PosY+sign(VSpeed),Obj_Solid))
    {
        PosY += sign(VSpeed)
    }
    VSpeed = 0;
}

else
{
CPlatform = collision_rectangle(PosX-4,PosY+8,PosX+4,PosY+8+VSpeed,Obj_Platform,true,false)
if (CPlatform != noone) &amp;&amp; (VSpeed &gt;= 0)
{

    if VSpeed != 0
    {if VSpeed &gt; 0
     {PosY = floor(PosY)}
    else
     {PosY = ceil(PosY)}
    }

    while(!place_meeting(PosX,PosY+sign(VSpeed),Obj_Platform))
    {
        PosY += sign(VSpeed)
    }
    VSpeed = 0
}
}

PosY += VSpeed
y = round(PosY)
}
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Animation Code
if global.Player = "Kid"
{if Facing = 1
{
if OnFloor &amp;&amp; HSpeed = 0
 {sprite_index = Spr_Kid_Stand_R
 image_speed = Frame_Speed(10)
 Sprite = "Stand"}

if OnFloor &amp;&amp; HSpeed != 0
 {sprite_index = Spr_Kid_Walk_R
 image_speed = Frame_Speed(45)
 Sprite = "Walk"}

if !OnFloor &amp;&amp; VSpeed &lt; 0
 {sprite_index = Spr_Kid_Jump_R
 image_speed = Frame_Speed(10)
 Sprite = "Jump"}
 
if !OnFloor &amp;&amp; VSpeed &gt;= 0
 {sprite_index = Spr_Kid_Fall_R
 image_speed = Frame_Speed(10)
 Sprite = "Fall"}
}

if Facing = -1
{
if OnFloor &amp;&amp; MoveDirection = 0
 {sprite_index = Spr_Kid_Stand_L
 image_speed = Frame_Speed(10)
 Sprite = "Stand"}

if OnFloor &amp;&amp; MoveDirection != 0
 {sprite_index = Spr_Kid_Walk_L
 image_speed = Frame_Speed(45)
 Sprite = "Walk"}

if !OnFloor &amp;&amp; VSpeed &lt; 0
 {sprite_index = Spr_Kid_Jump_L
 image_speed = Frame_Speed(10)
 Sprite = "Jump"}
 
if !OnFloor &amp;&amp; VSpeed &gt;= 0
 {sprite_index = Spr_Kid_Fall_L
 image_speed = Frame_Speed(10)
 Sprite = "Fall"}
}}

//------------------------------------------
if global.Player = "Dry"
{if Facing = 1
{
if OnFloor &amp;&amp; MoveDirection = 0
 {sprite_index = Spr_Dry_Stand_R
 image_speed = Frame_Speed(7.5)
 Sprite = "Stand"}

if OnFloor &amp;&amp; MoveDirection != 0
 {sprite_index = Spr_Dry_Walk_R
 image_speed = Frame_Speed(15)
 Sprite = "Walk"}

if !OnFloor &amp;&amp; VSpeed &lt; 0
 {sprite_index = Spr_Dry_Jump_R
 image_speed = Frame_Speed(10)
 Sprite = "Jump"}
 
if !OnFloor &amp;&amp; VSpeed &gt;= 0
 {sprite_index = Spr_Dry_Fall_R
 image_speed = Frame_Speed(10)
 Sprite = "Fall"}
}

if Facing = -1
{
if OnFloor &amp;&amp; MoveDirection = 0
 {sprite_index = Spr_Dry_Stand_L
 image_speed = Frame_Speed(7.5)
 Sprite = "Stand"}

if OnFloor &amp;&amp; MoveDirection != 0
 {sprite_index = Spr_Dry_Walk_L
 image_speed = Frame_Speed(15)
 Sprite = "Walk"}

if !OnFloor &amp;&amp; VSpeed &lt; 0
 {sprite_index = Spr_Dry_Jump_L
 image_speed = Frame_Speed(10)
 Sprite = "Jump"}
 
if !OnFloor &amp;&amp; VSpeed &gt;= 0
 {sprite_index = Spr_Dry_Fall_L
 image_speed = Frame_Speed(10)
 Sprite = "Fall"}
}}


</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if PosX &gt;= 0
&amp;&amp; PosX &lt;= room_width
&amp;&amp; PosY &gt;= 0
&amp;&amp; PosY &lt;= room_height
{global.GoToRoom = -1}

else
{
if global.Warp = 0
{global.Warp = 1

if PosX &lt; 0
{global.GoToRoom = global.RoomLeft
global.Direction = "Left"}

if PosX &gt; room_width
{global.GoToRoom = global.RoomRight
global.Direction = "Right"}

if PosY &lt; 0
{global.GoToRoom = global.RoomUp
global.Direction = "Up"}

if PosY &gt; room_height
{global.GoToRoom = global.RoomDown
global.Direction = "Down"}}

if global.GoToRoom != -1
{//room_goto(global.GoToRoom)
Change_Room_Delete()

if global.Direction = "Left"
{room_goto_transition(global.GoToRoom,7,30,c_black,0)}
if global.Direction = "Right"
{room_goto_transition(global.GoToRoom,6,30,c_black,0)}
if global.Direction = "Up"
{room_goto_transition(global.GoToRoom,9,30,c_black,0)}
if global.Direction = "Down"
{room_goto_transition(global.GoToRoom,8,30,c_black,0)}

alarm[0] = 1}
else
{instance_destroy()}}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if Press_Change = 1
{if Obj_Kid.Gun = "Small"
{if global.GetBazooka = 1
{Obj_Kid.Gun = "Bazooka"}}
else
if Obj_Kid.Gun = "Bazooka"
{Obj_Kid.Gun = "Small"}}

if Press_Trans = 1 {
    if global.Player = "Kid" {
        global.Player = "Dry"
    }
    else if global.Player = "Dry" {
        global.Player = "Kid"
    }
    instance_create(x,y,Obj_Ligth)
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if MercyFrames &gt; 0 {
    MercyFrames--
    if (MercyFrames % 4 = 0 || MercyFrames % 3 = 0) &amp;&amp; MercyFrames &gt; 1 {
        visible = false
    } else {
        visible = true
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="Obj_Damage">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if MercyFrames = 0 {
    if Life - other.Damage &lt;= 0 {
        instance_destroy()
    }
    else {
        MercyFrames = 30
        Life = Life - other.Damage
        audio_play_sound_on(global.SFX,Snd_Hit,false,1)
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="Obj_Bazooka">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.GetBazooka = 1
Gun = "Bazooka"
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="Obj_Killer">
      <action>
        <libid>1</libid>
        <id>203</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_kill_object</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>ls_system_clear()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if global.SaveLoad = 1
{PosX = global.SPosX
PosY = global.SPosY
Facing = global.SFacing
global.SaveLoad = 0}
Light=ls_light_create(x,y,75,360,0,make_color_rgb(102.5,102.5,102.5),32,false,false,50);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if Box = 1 {
    draw_sprite(Spr_GuiBox1,1,(global.GuiX+x),(global.GuiY+y))
}

if global.ShieldMode = 1 {
    draw_sprite(Spr_KidLife,Life,(global.GuiX+x),(global.GuiY+y)-35)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="49">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if Box = 1
{Box = 0}
else
{Box = 1}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>16,24</point>
    <point>16,16</point>
  </PhysicsShapePoints>
</object>
